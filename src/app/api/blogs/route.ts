export const blogData = [
  {
    id: 21,
    title: "sdsdsd",
    content: "sdsds sd sds",
    thumbnail: "https://www.bigamysuma.org.jpg",
    isFeatured: true,
    tags: ["next", "jaba", ""],
    view: 1,
    authorId: 1,
    createdAt: "2025-10-09T13:07:19.500Z",
    updatedAt: "2025-10-09T13:07:29.112Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
  {
    id: 20,
    title: "Quas dignissimos vol",
    content: "Atque cupidatat cons",
    thumbnail: "https://www.foludilo.cm",
    isFeatured: false,
    tags: ["Officiis eum cupidat"],
    view: 0,
    authorId: 1,
    createdAt: "2025-10-09T12:56:32.449Z",
    updatedAt: "2025-10-09T12:56:32.449Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
  {
    id: 19,
    title: "Illum mollitia non ",
    content: "Et impedit ducimus",
    thumbnail: "https://www.pugokeducimif.ws",
    isFeatured: false,
    tags: ["Est eaque deserunt i"],
    view: 0,
    authorId: 1,
    createdAt: "2025-10-09T12:54:56.910Z",
    updatedAt: "2025-10-09T12:54:56.910Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
  {
    id: 18,
    title: "Sunt non reprehende",
    content: "Tempor blanditiis vi",
    thumbnail: "https://www.gobatyvuxoq.net",
    isFeatured: false,
    tags: ["Ipsum voluptatem Su"],
    view: 0,
    authorId: 1,
    createdAt: "2025-10-09T12:54:30.299Z",
    updatedAt: "2025-10-09T12:54:30.299Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
  {
    id: 17,
    title: "Lorem earum ut id s",
    content: "Iste delectus offic",
    thumbnail: "https://www.bigamysuma.org",
    isFeatured: false,
    tags: ["Ullam ut sit asperi"],
    view: 0,
    authorId: 1,
    createdAt: "2025-10-09T12:53:38.165Z",
    updatedAt: "2025-10-09T12:53:38.165Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
  {
    id: 16,
    title: "Mastering Next.js App Router",
    content:
      "Next.js App Router brings a new way of building React apps with file-based routing, layouts, and server components. Let's master it.",
    thumbnail: "https://example.com/thumbnails/nextjs-app-router.jpg",
    isFeatured: true,
    tags: ["nextjs", "react", "routing"],
    view: 855,
    authorId: 1,
    createdAt: "2025-10-09T10:27:31.198Z",
    updatedAt: "2025-10-09T11:28:55.751Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
  {
    id: 15,
    title: "Mastering Next.js App Router",
    content:
      "Next.js App Router brings a new way of building React apps with file-based routing, layouts, and server components. Let's master it.",
    thumbnail: "https://example.com/thumbnails/nextjs-app-router.jpg",
    isFeatured: true,
    tags: ["nextjs", "react", "routing"],
    view: 846,
    authorId: 1,
    createdAt: "2025-10-09T09:56:43.962Z",
    updatedAt: "2025-10-09T11:09:56.656Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
  {
    id: 14,
    title: "Implementing Role-Based Access Control",
    content:
      "RBAC helps secure your applications by defining permissions based on user roles. In this post, weâ€™ll build a simple RBAC system with Express.js.",
    thumbnail: "https://example.com/thumbnails/rbac.jpg",
    isFeatured: false,
    tags: ["security", "rbac", "express"],
    view: 450,
    authorId: 2,
    createdAt: "2025-10-09T09:56:34.758Z",
    updatedAt: "2025-10-09T09:56:34.758Z",
    author: {
      id: 2,
      name: "sohel Rana1",
      email: "sohelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:51:04.062Z",
      updatedAt: "2025-10-09T09:51:04.062Z",
    },
  },
  {
    id: 12,
    title: "Using Redux Toolkit with TypeScript",
    content:
      "Redux Toolkit simplifies state management, and combining it with TypeScript provides great developer experience and safety.",
    thumbnail: "https://example.com/thumbnails/redux-ts.jpg",
    isFeatured: true,
    tags: ["redux", "typescript", "frontend"],
    view: 600,
    authorId: 4,
    createdAt: "2025-10-09T09:55:57.585Z",
    updatedAt: "2025-10-09T09:55:57.585Z",
    author: {
      id: 4,
      name: "masud Rana1",
      email: "masudrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:51:22.949Z",
      updatedAt: "2025-10-09T09:51:22.949Z",
    },
  },
  {
    id: 11,
    title: "Optimizing MongoDB Queries for Better Performance",
    content:
      "MongoDB is powerful, but poorly structured queries can slow your app. In this post, we explore indexing, projections, and query optimization techniques.",
    thumbnail: "https://example.com/thumbnails/mongodb-performance.jpg",
    isFeatured: false,
    tags: ["mongodb", "database", "performance"],
    view: 410,
    authorId: 1,
    createdAt: "2025-10-09T09:55:44.446Z",
    updatedAt: "2025-10-09T09:55:44.446Z",
    author: {
      id: 1,
      name: "Rubel Rana1",
      email: "rubelrana1@gmail.com",
      password: "userpass",
      role: "USER",
      phone: "+8801700000004",
      pictures: "https://example.com/images/jane.jpg",
      status: "ACTIVE",
      isVerified: true,
      createdAt: "2025-10-09T09:50:43.381Z",
      updatedAt: "2025-10-09T09:50:43.381Z",
    },
  },
];
export const GET = async (request: Request) => {
  // console.log("Received GET request at /api/blogs");
  return Response.json(
    { message: "Fetch blog data successfully", data: blogData },
    { status: 200 }
  );
};

export const POST = async (request: Request) => {
  // console.log("Received POST request at /api/blogs");
  const blog = await request.json();
  // console.log("Request body:", blog);
  const newBlog = {
    ...blog,
    id: blogData.length + 1,
  };
  blogData.push(newBlog);
  return Response.json(
    { message: "Blog created successfully", data: newBlog },
    { status: 201 }
  );
};
